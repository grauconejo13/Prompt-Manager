{"version":3,"sources":["index.js"],"names":["require","GraphQLObjectType","GraphQLSchema","GraphQLString","GraphQLInt","GraphQLList","GraphQLNonNull","Prompt","type","createdAt","upVotes","PromptType","chatId","fields","prompt","resolve","find","args","chatTitle","parent","name","addPrompt","RootQuery","response","findOneAndDelete"],"mappings":"0BAAqGA,QAAQ,WAArGC,2BAAAA,kBAAmBC,uBAAAA,cAAeC,uBAAAA,cAAeC,oBAAAA,WAAYC,qBAAAA,YAAaC,wBAAAA,eAC5EC,OAASP,QAAQ,oBADfC,WAAAA,IAGeA,kBAHfA,CAAmBC,KAAAA,SAAeC,OAAAA,WAAAA,MAKvB,CALsCC,OAMzC,CAAEI,KAAML,eAN6CE,OAOrD,CAAEG,KAAML,eAP0DG,SAQhE,CAAEE,KAAML,eAClBM,UAAW,CAAED,KAAML,eARrBI,UAASP,CAAQQ,KAAAL,eAUfO,QAAS,CAAEF,KAAMJ,YARnBO,UAAa,CAAIV,KAAAA,gBAGfW,UAAQ,IAAAX,kBAAA,CAAEO,KAAAA,gBAAFK,OADG,CAEXC,QAAQ,CAAMN,KAAEL,IAAAA,YAAAA,YAFLY,QAEH,WACE,OAAAR,OAAAS,SACVP,OAAS,CAAQD,KAAEL,WAJRc,KAAA,CAAAL,OAAA,CAAAJ,KAAAL,gBAKXe,QADS,SACEC,EAAAF,GAAQd,OAAAA,OAAAA,QAAAA,CAAAA,OAAAA,EAAAA,cAENK,SAAMJ,IAAAA,kBAAAA,CAARgB,KAAA,WAPAP,OAAP,CAAAQ,UAAA,CAFZb,KAAAG,WAaMW,KAAY,CACRV,OAD8B,CAAAJ,KAAA,IAAAF,eAAAH,gBAE5BW,OAAA,CAAAN,KAAA,IAAAF,eAAAH,gBACKoB,SAAA,CAAAf,KAAA,IAAAF,eAAAH,gBACKE,UAAJ,CAAgBM,KAAAA,IADjBL,eAAAH,iBAGDY,QAjBJ,SAiBWR,EAAPU,GAKoBd,OAJvB,IAAAI,OAAA,CALDK,OAAAK,EAAAL,OAOIE,OAAAG,EAAAH,OACEH,SADFM,EAAAM,SAEEL,UAAAD,EAAAC,YAAkBf,SACxBY,aAHI,CAIAP,KAAOD,WAAiBK,KAAQK,CAAAA,OAAKL,CAAAA,KAAAA,IAAAA,eAAAA,iBAArCG,QAJA,SAIAI,EAAAF,GACH,OAAAV,OAAAiB,iBAAA,CAAAZ,OAAAK,EAAAL,cAOTC,OAAAA,QAAQ,IAAAX,cAAA,CACJmB,MAAAA,UACIb,SAAMG","file":"index.min.js","sourcesContent":["const { GraphQLObjectType, GraphQLSchema, GraphQLString, GraphQLInt, GraphQLList, GraphQLNonNull } = require('graphql');\r\nconst Prompt = require('../models/Prompt');\r\n\r\nconst PromptType = new GraphQLObjectType({\r\n    name: 'Prompt',\r\n    fields: () => ({\r\n        chatId: { type: GraphQLString },\r\n        prompt: { type: GraphQLString },\r\n        response: { type: GraphQLString },\r\n        createdAt: { type: GraphQLString },\r\n        chatTitle: { type: GraphQLString },\r\n        upVotes: { type: GraphQLInt },\r\n        downVotes: { type: GraphQLInt }\r\n    })\r\n});\r\n\r\nconst RootQuery = new GraphQLObjectType({\r\n    name: 'RootQueryType',\r\n    fields: {\r\n        prompts: {\r\n            type: new GraphQLList(PromptType),\r\n            resolve(parent, args) {\r\n                return Prompt.find();\r\n            }\r\n        },\r\n        prompt: {\r\n            type: PromptType,\r\n            args: { chatId: { type: GraphQLString } },\r\n            resolve(parent, args) {\r\n                return Prompt.findOne({ chatId: args.chatId });\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst Mutation = new GraphQLObjectType({\r\n    name: 'Mutation',\r\n    fields: {\r\n        addPrompt: {\r\n            type: PromptType,\r\n            args: {\r\n                chatId: { type: new GraphQLNonNull(GraphQLString) },\r\n                prompt: { type: new GraphQLNonNull(GraphQLString) },\r\n                response: { type: new GraphQLNonNull(GraphQLString) },\r\n                chatTitle: { type: new GraphQLNonNull(GraphQLString) }\r\n            },\r\n            resolve(parent, args) {\r\n                const newPrompt = new Prompt({\r\n                    chatId: args.chatId,\r\n                    prompt: args.prompt,\r\n                    response: args.response,\r\n                    chatTitle: args.chatTitle\r\n                });\r\n                return newPrompt.save();\r\n            }\r\n        },\r\n        deletePrompt: {\r\n            type: PromptType,\r\n            args: { chatId: { type: new GraphQLNonNull(GraphQLString) } },\r\n            resolve(parent, args) {\r\n                return Prompt.findOneAndDelete({ chatId: args.chatId });\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nmodule.exports = new GraphQLSchema({\r\n    query: RootQuery,\r\n    mutation: Mutation\r\n});"]}