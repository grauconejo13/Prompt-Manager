{"version":3,"sources":["index.js"],"names":["require","GraphQLObjectType","GraphQLSchema","GraphQLString","GraphQLInt","GraphQLList","GraphQLNonNull","Prompt","PromptType","name","fields","chatId","type","prompt","response","createdAt","chatTitle","upVotes","downVotes","RootQuery","prompts","resolve","parent","args","find","findOne","Mutation","addPrompt","newPrompt","save","deletePrompt","findOneAndDelete","module","exports","query","mutation"],"mappings":"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","sourcesContent":["const { GraphQLObjectType, GraphQLSchema, GraphQLString, GraphQLInt, GraphQLList, GraphQLNonNull } = require('graphql');\r\nconst Prompt = require('../models/Prompt');\r\n\r\nconst PromptType = new GraphQLObjectType({\r\n    name: 'Prompt',\r\n    fields: () => ({\r\n        chatId: { type: GraphQLString },\r\n        prompt: { type: GraphQLString },\r\n        response: { type: GraphQLString },\r\n        createdAt: { type: GraphQLString },\r\n        chatTitle: { type: GraphQLString },\r\n        upVotes: { type: GraphQLInt },\r\n        downVotes: { type: GraphQLInt }\r\n    })\r\n});\r\n\r\nconst RootQuery = new GraphQLObjectType({\r\n    name: 'RootQueryType',\r\n    fields: {\r\n        prompts: {\r\n            type: new GraphQLList(PromptType),\r\n            resolve(parent, args) {\r\n                return Prompt.find();\r\n            }\r\n        },\r\n        prompt: {\r\n            type: PromptType,\r\n            args: { chatId: { type: GraphQLString } },\r\n            resolve(parent, args) {\r\n                return Prompt.findOne({ chatId: args.chatId });\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconst Mutation = new GraphQLObjectType({\r\n    name: 'Mutation',\r\n    fields: {\r\n        addPrompt: {\r\n            type: PromptType,\r\n            args: {\r\n                chatId: { type: new GraphQLNonNull(GraphQLString) },\r\n                prompt: { type: new GraphQLNonNull(GraphQLString) },\r\n                response: { type: new GraphQLNonNull(GraphQLString) },\r\n                chatTitle: { type: new GraphQLNonNull(GraphQLString) }\r\n            },\r\n            resolve(parent, args) {\r\n                const newPrompt = new Prompt({\r\n                    chatId: args.chatId,\r\n                    prompt: args.prompt,\r\n                    response: args.response,\r\n                    chatTitle: args.chatTitle\r\n                });\r\n                return newPrompt.save();\r\n            }\r\n        },\r\n        deletePrompt: {\r\n            type: PromptType,\r\n            args: { chatId: { type: new GraphQLNonNull(GraphQLString) } },\r\n            resolve(parent, args) {\r\n                return Prompt.findOneAndDelete({ chatId: args.chatId });\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nmodule.exports = new GraphQLSchema({\r\n    query: RootQuery,\r\n    mutation: Mutation\r\n});"],"file":"index.dev.js"}