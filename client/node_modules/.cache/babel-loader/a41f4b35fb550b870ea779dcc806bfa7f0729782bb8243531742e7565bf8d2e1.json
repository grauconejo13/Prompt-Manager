{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vanes\\\\Desktop\\\\VanessaVictorino-prompt-db\\\\client\\\\src\\\\components\\\\PromptForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\n\n// Define the GraphQL mutation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_PROMPT = gql`\n  mutation AddPrompt($chatId: ID!, $prompt: String!, $response: String!, $chatTitle: String!) {\n    addPrompt(chatId: $chatId, prompt: $prompt, response: $response, chatTitle: $chatTitle) {\n      chatId\n      prompt\n      response\n      chatTitle\n      createdAt\n    }\n  }\n`;\nfunction PromptForm() {\n  _s();\n  const [formState, setFormState] = useState({\n    chatId: '',\n    prompt: '',\n    response: '',\n    chatTitle: ''\n  });\n  const [addPrompt, {\n    error\n  }] = useMutation(ADD_PROMPT);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await addPrompt({\n        variables: {\n          chatId: formState.chatId,\n          prompt: formState.prompt,\n          response: formState.response,\n          chatTitle: formState.chatTitle\n        }\n      });\n      // Optionally, reset the form or display a success message here.\n      setFormState({\n        chatId: '',\n        prompt: '',\n        response: '',\n        chatTitle: ''\n      });\n    } catch (err) {\n      console.error('Error adding prompt:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"chatId\",\n        children: \"Chat ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"chatId\",\n        value: formState.chatId,\n        onChange: e => setFormState({\n          ...formState,\n          chatId: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"prompt\",\n        children: \"Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"prompt\",\n        value: formState.prompt,\n        onChange: e => setFormState({\n          ...formState,\n          prompt: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"response\",\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"response\",\n        value: formState.response,\n        onChange: e => setFormState({\n          ...formState,\n          response: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"chatTitle\",\n        children: \"Chat Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"chatTitle\",\n        value: formState.chatTitle,\n        onChange: e => setFormState({\n          ...formState,\n          chatTitle: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(PromptForm, \"L9Dvny7H8kMfcuprizNmW9QQBIc=\", false, function () {\n  return [useMutation];\n});\n_c = PromptForm;\nexport default PromptForm;\nvar _c;\n$RefreshReg$(_c, \"PromptForm\");","map":{"version":3,"names":["React","useState","useMutation","gql","jsxDEV","_jsxDEV","ADD_PROMPT","PromptForm","_s","formState","setFormState","chatId","prompt","response","chatTitle","addPrompt","error","handleSubmit","event","preventDefault","variables","err","console","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","required","message","_c","$RefreshReg$"],"sources":["C:/Users/vanes/Desktop/VanessaVictorino-prompt-db/client/src/components/PromptForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation, gql } from '@apollo/client';\r\n\r\n// Define the GraphQL mutation\r\nconst ADD_PROMPT = gql`\r\n  mutation AddPrompt($chatId: ID!, $prompt: String!, $response: String!, $chatTitle: String!) {\r\n    addPrompt(chatId: $chatId, prompt: $prompt, response: $response, chatTitle: $chatTitle) {\r\n      chatId\r\n      prompt\r\n      response\r\n      chatTitle\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nfunction PromptForm() {\r\n  const [formState, setFormState] = useState({\r\n    chatId: '',\r\n    prompt: '',\r\n    response: '',\r\n    chatTitle: ''\r\n  });\r\n\r\n  const [addPrompt, { error }] = useMutation(ADD_PROMPT);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await addPrompt({\r\n        variables: {\r\n          chatId: formState.chatId,\r\n          prompt: formState.prompt,\r\n          response: formState.response,\r\n          chatTitle: formState.chatTitle\r\n        }\r\n      });\r\n      // Optionally, reset the form or display a success message here.\r\n      setFormState({\r\n        chatId: '',\r\n        prompt: '',\r\n        response: '',\r\n        chatTitle: ''\r\n      });\r\n    } catch (err) {\r\n      console.error('Error adding prompt:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"chatId\">Chat ID</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"chatId\"\r\n          value={formState.chatId}\r\n          onChange={(e) => setFormState({ ...formState, chatId: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"prompt\">Prompt</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"prompt\"\r\n          value={formState.prompt}\r\n          onChange={(e) => setFormState({ ...formState, prompt: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"response\">Response</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"response\"\r\n          value={formState.response}\r\n          onChange={(e) => setFormState({ ...formState, response: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"chatTitle\">Chat Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"chatTitle\"\r\n          value={formState.chatTitle}\r\n          onChange={(e) => setFormState({ ...formState, chatTitle: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add Prompt</button>\r\n      {error && <p>Error: {error.message}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PromptForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}